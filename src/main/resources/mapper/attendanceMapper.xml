<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaogangkui.dao.AttendanceDao">
    <insert id="create" parameterType="LeaveVerifyRecord" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_attendance(customerId,userId,userName ,createTime,isDeleted,type,address,longitude,latitude,remark,againTime)
        VALUES(#{customerId},#{userId},#{userName} ,#{createTime},#{isDeleted},#{type},#{address},#{longitude},#{latitude},#{remark},#{againTime})
    </insert>
    <select id="findById" parameterType="map" resultType="Attendance">
        SELECT * from t_attendance where id = #{id}
    </select>

    <select id="fuzzySearch"  parameterType="map" resultType="Attendance">
        SELECT * from t_attendance where
        0=0
        <if test="userId !=0">
            and userId = #{userId}
        </if>
        <if test="customerId !=0">
            and customerId = #{customerId}
        </if>
        <if test="startTime != null">
            and createTime >= #{startTime}
        </if>
        <if test="endTime != null">
            and #{endTime} >= createTime
        </if>
        ORDER  by createTime
        <if test="limit != null and  limit != 0">
          limit #{start},#{limit}
        </if>
    </select>
    <select id="fuzzySearchCount" parameterType="map" resultType="java.lang.Integer">
        SELECT COUNT(id) from t_attendance where
        0=0
        <if test="userId !=0">
            and userId = #{userId}
        </if>
        <if test="customerId !=0">
            and customerId = #{customerId}
        </if>
        <if test="startTime != null">
            and createTime >= #{startTime}
        </if>
        <if test="endTime != null">
            and #{endTime} >= createTime
        </if>
    </select>

    <select id="queryByTime" parameterType="map" resultType="Attendance">
        SELECT * from t_attendance where  userId = #{userId} and isDeleted = 0 and   DATE_FORMAT(createTime, '%Y-%m-%d') = #{time}
    </select>
    <select id="groupTotalReport" parameterType="map" resultType="com.xiaogangkui.dto.AttendanceReportDto">
        select count(1) as total,userId,userName,type,dateformat('%Y-%m-%d',createTime) as createTime  from t_attendance where customerId = #{customerId} and isDeleted = 0
        and createTime >= #{startTime} and #{endTime} >= createTime
        group by userId,dateformat('%Y-%m-%d',createTime),type
    </select>
</mapper>
